plugins {
    // Tell Gradle that we are builing java as a library (non-executable piece of code intended for use by other applications).
    id 'java'
    id 'java-library'
}

apply plugin: "jacoco"

jacoco {
    toolVersion = "0.8.7"
    id 'org.barfuin.gradle.jacocolog' version '2.0.0'
}

apply plugin: "checkstyle"

checkstyle {

    configFile = project(':').file("config/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile" : project(':').file("config/checkstyle/suppressions.xml")]
    toolVersion = "6.1.1"
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

repositories {
    // Specify the repository mirror that we want to download our dependencies from. Maven Central is configured by default when creating a new Gradle project.
    mavenCentral()
}

dependencies {
    // Download JUnit so that we can use it in our tests.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation "org.xerial:sqlite-jdbc:3.45.1.0"

    testImplementation "org.slf4j:slf4j-api:1.7.5"
    testImplementation "org.slf4j:slf4j-log4j12:1.7.5"

    implementation "com.fasterxml.jackson.core:jackson-databind:+" // for making jsons
    implementation "com.fasterxml.jackson.core:jackson-core:+"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testRuntimeOnly "org.junit.platform:junit-platform-commons:1.8.2"

    implementation project(':domain')

}

test {
    // For running our tests, use the test runner provided by JUnit.
    useJUnitPlatform()
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.6
            }
            excludes = [
                    'mancala.persistence.MancalaDatabase'
            ]
        }
    }
}

tasks.withType(JacocoReport) {
    doLast {
        logger.info("Class exclusion list: ${project.jacocoTestCoverageVerification.violationRules.rules[0].excludes}")
    }
}

test.finalizedBy jacocoTestReport
